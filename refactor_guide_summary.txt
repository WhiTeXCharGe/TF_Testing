Project Refactor Guide (Summary)

Recommended Project Layout
--------------------------
scheduler/
  domain.py            # dataclasses & planning annotations (DaySlot, Employee, TaskWindow, RequirementSlot, Schedule)
  constraints.py       # @constraint_provider define_constraints() + individual constraint funcs
  config_loader.py     # YAML parsing, validation, construction of domain objects
  solver.py            # build SolverConfig, create Solver, solve(problem)
  policies.py          # constants like BUSINESS_DAYS, default caps, weights
  sanity.py            # optional: pre-solve sanity checks & assertions
  export/
    excel_export.py    # Excel writer
bin/
  solve_and_export.py  # CLI entrypoint (argparse), calls solver + export
config/
  config_modules.yaml  # YAMLs
tests/
  ...                  # tests for domain, constraints, loader, sanity

Responsibilities
----------------
- domain.py → defines types only. No solver, no I/O.
- constraints.py → pure functions using domain + policies.
- config_loader.py → reads YAML, returns domain objects + knobs.
- sanity.py → fast feasibility checks before solve.
- solver.py → builds requirement slots, sets up Timefold, calls constraints, runs solve().
- export/excel_export.py → writes Excel given Schedule + start_day.
- policies.py → central tunables (business days, weights).
- bin/solve_and_export.py → top-level CLI.

Refactor Order
--------------
1. Extract domain types (domain.py).
2. Extract constraints (constraints.py).
3. Extract loader (config_loader.py).
4. Extract solver (solver.py).
5. Move exporter (export/excel_export.py).
6. Create CLI (bin/solve_and_export.py).
7. Add __init__.py to packages.

Config Knobs
------------
- Prefer driving rules from YAML (e.g., weekend policy, max workers).
- Loader parses YAML → returns dict of knobs.
- Solver applies knobs into policies or context.

Tips
----
- Avoid circular imports (domain has no deps).
- Keep constraints free of solver/loader.
- Run sanity checks (window length ≥ workload, at least one skilled employee, etc.).
- Unit test loader and constraints separately.
- Adjust exporter import: from scheduler.solver import solve_from_config.

